format_version: 10
pipelines:
  processing-pipeline:
    group: videoodyssee
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      CDN_ADDRESS: 52.66.255.140 
      CDN_SERVER_USERNAME: admin
      CDN_FILES_FOLDER: /srv/files
      CONFERENCE: freifunk
      VIDEO_URL: http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4
      VIDEO_ID: dd3456dd-e277-4947-95db-3b7c64d4216f
      TITLE: Test
    materials:
      git-cd3e9d4:
        git: https://github.com/0xVijayReddy/test.git
        shallow_clone: false
        auto_update: true
        branch: master
    stages:
    - download:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          fix-metadata:
            timeout: 0
            artifacts:
            - build:
                source: video.mp4
                destination: ''
            tasks:
            - exec:
                arguments:
                - /opt/download_video.sh
                command: bash
                run_if: passed
            - exec:
                arguments:
                - /opt/fix-metadata.sh
                command: bash
                run_if: passed
    - processing:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: true
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          encode-h264:
            timeout: 0
            artifacts:
            - build:
                source: '*h264.mp4'
                destination: ''
            tasks:
            - fetch:
                run_if: any
                stage: download
                job: fix-metadata
                is_file: yes
                source: video.mp4

            - exec:
                arguments:
                - /opt/encode_h264_AAC_HQ.sh
                command: bash
                run_if: passed
            - exec:
                arguments:
                - /opt/upload_video_to_cdn.sh
                - h264
                command: bash
                run_if: passed    
          encode-webm:
            timeout: 0
            artifacts:
            - build:
                source: '*webm.webm'
                destination: ''
            tasks:
            - fetch:
                run_if: any
                stage: download
                job: fix-metadata
                is_file: yes
                source: video.mp4
                
            - exec:
                arguments:
                - /opt/encode_webm.sh
                command: bash
                run_if: passed
            - exec:
                arguments:
                - /opt/upload_video_to_cdn.sh
                - webm
                command: bash
                run_if: passed    
          generate-thumbnail:
            timeout: 0
            artifacts:
            - build:
                source: '*.jpg'
                destination: ''
            tasks:
            - fetch:
                run_if: any
                stage: download
                job: fix-metadata
                is_file: yes
                source: video.mp4
                
            - exec:
                arguments:
                - /opt/create_poster_thumbnails.sh 
                - . 
                - video.mp4
                command: bash
                run_if: passed
            - exec:
                arguments:
                - /opt/create_timelens.sh
                - video.mp4
                command: bash
                run_if: passed
            - exec:
                arguments:
                - /opt/upload_files_to_cdn.sh
                command: bash
                run_if: passed    
